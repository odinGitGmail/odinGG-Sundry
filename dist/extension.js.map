{"version":3,"file":"extension.js","mappings":"uzBAKA,oBAAyBA,GAGxBA,EAAQC,cAAcC,KAAKC,EAAOC,SAASC,0BAA0B,mCAAmC,CAACC,EAAYC,KACpH,MAAMC,EAAWF,EAAWG,UAAUC,OACtCH,EAAKI,OAAOH,GAAS,eAAeI,cAAc,KAInDZ,EAAQC,cAAcC,KAAKC,EAAOC,SAASC,0BAA0B,mCAAmC,CAACC,EAAYC,KACpH,MAAMC,EAAWF,EAAWG,UAAUC,OACtCH,EAAKI,OAAOH,GAAS,eAAeK,cAAc,KAInDb,EAAQC,cAAcC,KAAKC,EAAOC,SAASU,gBAAgB,gCAAiCC,IAE3F,MAAMC,EAAeD,EAAIE,WAAWC,WAAW,WACzCH,EAAIE,WAAWE,QAAQ,UAAW,IAClCJ,EAAIE,WACJG,EAAmB,UAAKC,KAAKL,EAAa,aAChD,UAAGM,KAAKF,GAAiBG,MAAOC,EAAIC,KAC/BD,SAMG,UAAGE,cAAcN,EAAiB,UAAiB,SACzDjB,EAAOwB,OAAOC,uBAAuB,GAAGZ,uBALxCb,EAAOwB,OAAOE,iBAAiB,QAAQb,qBAMxC,GACC,IAEJ,EAEA,wBAA8B,EAxC9B,kBACA,YACA,YACA,YACA,W,+DCGA,UAPqB,KACjB,SAASc,IACL,OAA2B,OAAjB,EAAEC,KAAKC,UAAmB,GAAGf,SAAS,IAAIgB,UAAU,EACjE,CACA,OAAQH,IAAKA,IAAK,IAAIA,IAAK,IAAIA,IAAK,IAAIA,IAAK,IAAIA,IAAKA,IAAKA,GAAK,C,+DC4UrE,UAhVyB,69L,UCAzBI,EAAOC,QAAUC,QAAQ,S,UCAzBF,EAAOC,QAAUC,QAAQ,K,UCAzBF,EAAOC,QAAUC,QAAQ,O,GCCrBC,EAA2B,CAAC,ECE5BC,EDCJ,SAASC,EAAoBC,GAE5B,IAAIC,EAAeJ,EAAyBG,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaN,QAGrB,IAAID,EAASG,EAAyBG,GAAY,CAGjDL,QAAS,CAAC,GAOX,OAHAQ,EAAoBH,GAAUI,KAAKV,EAAOC,QAASD,EAAQA,EAAOC,QAASI,GAGpEL,EAAOC,OACf,CCnB0BI,CAAoB,K","sources":["webpack://odinsundry/./src/extension.ts","webpack://odinsundry/./src/sundry/generateGuid.ts","webpack://odinsundry/./src/template/defaultGitgnore.ts","webpack://odinsundry/external commonjs \"vscode\"","webpack://odinsundry/external node-commonjs \"fs\"","webpack://odinsundry/external node-commonjs \"path\"","webpack://odinsundry/webpack/bootstrap","webpack://odinsundry/webpack/startup"],"sourcesContent":["import * as vscode from 'vscode';\nimport fs from 'fs';\nimport path from 'path';\nimport generateGuid from './sundry/generateGuid';\nimport gitgnoreTemplate from './template/defaultGitgnore';\nexport function activate(context: vscode.ExtensionContext) {\n\n\t// guid - 生成大写\n\tcontext.subscriptions.push(vscode.commands.registerTextEditorCommand('odin-sundry.generateGuidToUpper', (textEditor, edit) => {\n\t\tconst position = textEditor.selection.active;\n\t\tedit.insert(position,generateGuid().toUpperCase());\n\t}));\n\n\t// guid - 生成小写\n\tcontext.subscriptions.push(vscode.commands.registerTextEditorCommand('odin-sundry.generateGuidToLower', (textEditor, edit) => {\n\t\tconst position = textEditor.selection.active;\n\t\tedit.insert(position,generateGuid().toLowerCase());\t\n\t}));\n\n\t// gitgnore - 生成 .gitgnore 文件\n\tcontext.subscriptions.push(vscode.commands.registerCommand('odin-sundry.generateGitgnore', (uri) => {\n\t\t// 判断文件是否存在\n\t\tconst gitgnorePath = uri.toString().startsWith('file://')\n\t\t\t\t\t\t? uri.toString().replace('file://', '')\n\t\t\t\t\t\t: uri.toString();\n\t\tconst gitgnoreFullPath = path.join(gitgnorePath,\".gitgnore\"); \n\t\tfs.stat(gitgnoreFullPath,async (err,stats)=>{\n\t\t\tif(!err){\n\t\t\t\t// 如果文件存在\n\t\t\t\tvscode.window.showErrorMessage(`当前路径 ${gitgnorePath} 已经有 .gitgnore 文件`);\n\t\t\t}\n\t\t\telse{\n\t\t\t\t// 如果不存在\n\t\t\t\tawait fs.writeFileSync(gitgnoreFullPath,gitgnoreTemplate,\"utf-8\");\n\t\t\t\tvscode.window.showInformationMessage(`${gitgnorePath} 已添加 .gitgnore 文件`);\n\t\t\t}\n\t\t});\n\t}));\n}\n\nexport function deactivate() {}\n","const generateGuid = ()=>{\n    function S4() {\n        return (((1+Math.random())*0x10000)|0).toString(16).substring(1);\n     }\n     return (S4()+S4()+\"-\"+S4()+\"-\"+S4()+\"-\"+S4()+\"-\"+S4()+S4()+S4());\n}\n\nexport default generateGuid;","const gitgnoreTemplate = `## Ignore Visual Studio temporary files, build results, and\n## files generated by popular Visual Studio add-ons.\n##\n## Get latest from https://github.com/github/gitignore/blob/master/VisualStudio.gitignore\n\n# User-specific files (MonoDevelop/Xamarin Studio)\n*.userprefs\n\n# Build results\n[Dd]ebug/\n[Dd]ebugPublic/\n[Rr]elease/\n[Rr]eleases/\nx64/\nx86/\n[Aa][Rr][Mm]/\n[Aa][Rr][Mm]64/\nbld/\n[Bb]in/\n[Oo]bj/\n[Ll]og/\n\n# Visual Studio 2015/2017 cache/options directory\n.vs/\n# Uncomment if you have tasks that create the project's static files in wwwroot\n#wwwroot/\n\n# Visual Studio 2017 auto generated files\nGenerated\\ Files/\n\n# MSTest test Results\n[Tt]est[Rr]esult*/\n[Bb]uild[Ll]og.*\n\n# NUNIT\n*.VisualState.xml\nTestResult.xml\n\n# Build Results of an ATL Project\n[Dd]ebugPS/\n[Rr]eleasePS/\ndlldata.c\n\n# Benchmark Results\nBenchmarkDotNet.Artifacts/\n\n# .NET Core\nproject.lock.json\nproject.fragment.lock.json\nartifacts/\n\n# StyleCop\nStyleCopReport.xml\n\n# Files built by Visual Studio\n*_i.c\n*_p.c\n*_h.h\n*.ilk\n*.meta\n*.obj\n*.iobj\n*.pch\n*.pdb\n*.ipdb\n*.pgc\n*.pgd\n*.rsp\n*.sbr\n*.tlb\n*.tli\n*.tlh\n*.tmp\n*.tmp_proj\n*_wpftmp.csproj\n*.log\n*.vspscc\n*.vssscc\n.builds\n*.pidb\n*.svclog\n*.scc\n\n# Chutzpah Test files\n_Chutzpah*\n\n# Visual C++ cache files\nipch/\n*.aps\n*.ncb\n*.opendb\n*.opensdf\n*.sdf\n*.cachefile\n*.VC.db\n*.VC.VC.opendb\n\n# Visual Studio profiler\n*.psess\n*.vsp\n*.vspx\n*.sap\n\n# Visual Studio Trace Files\n*.e2e\n\n# TFS 2012 Local Workspace\n$tf/\n\n# Guidance Automation Toolkit\n*.gpState\n\n# ReSharper is a .NET coding add-in\n_ReSharper*/\n*.[Rr]e[Ss]harper\n*.DotSettings.user\n\n# JustCode is a .NET coding add-in\n.JustCode\n\n# TeamCity is a build add-in\n_TeamCity*\n\n# DotCover is a Code Coverage Tool\n*.dotCover\n\n# AxoCover is a Code Coverage Tool\n.axoCover/*\n!.axoCover/settings.json\n\n# Visual Studio code coverage results\n*.coverage\n*.coveragexml\n\n# NCrunch\n_NCrunch_*\n.*crunch*.local.xml\nnCrunchTemp_*\n\n# MightyMoose\n*.mm.*\nAutoTest.Net/\n\n# Web workbench (sass)\n.sass-cache/\n\n# Installshield output folder\n[Ee]xpress/\n\n# DocProject is a documentation generator add-in\nDocProject/buildhelp/\nDocProject/Help/*.HxT\nDocProject/Help/*.HxC\nDocProject/Help/*.hhc\nDocProject/Help/*.hhk\nDocProject/Help/*.hhp\nDocProject/Help/Html2\nDocProject/Help/html\n\n# Click-Once directory\npublish/\n\n# Publish Web Output\n*.[Pp]ublish.xml\n*.azurePubxml\n# Note: Comment the next line if you want to checkin your web deploy settings,\n# but database connection strings (with potential passwords) will be unencrypted\n*.pubxml\n*.publishproj\n\n# Microsoft Azure Web App publish settings. Comment the next line if you want to\n# checkin your Azure Web App publish settings, but sensitive information contained\n# in these scripts will be unencrypted\nPublishScripts/\n\n# NuGet Packages\n*.nupkg\n# The packages folder can be ignored because of Package Restore\n**/[Pp]ackages/*\n# except build/, which is used as an MSBuild target.\n!**/[Pp]ackages/build/\n# Uncomment if necessary however generally it will be regenerated when needed\n#!**/[Pp]ackages/repositories.config\n# NuGet v3's project.json files produces more ignorable files\n*.nuget.props\n*.nuget.targets\n\n# Microsoft Azure Build Output\ncsx/\n*.build.csdef\n\n# Microsoft Azure Emulator\necf/\nrcf/\n\n# Windows Store app package directories and files\nAppPackages/\nBundleArtifacts/\nPackage.StoreAssociation.xml\n_pkginfo.txt\n*.appx\n\n# Visual Studio cache files\n# files ending in .cache can be ignored\n*.[Cc]ache\n# but keep track of directories ending in .cache\n!?*.[Cc]ache/\n\n# Others\nClientBin/\n~$*\n*~\n*.dbmdl\n*.dbproj.schemaview\n*.jfm\n*.pfx\n*.publishsettings\norleans.codegen.cs\n\n# Including strong name files can present a security risk\n# (https://github.com/github/gitignore/pull/2483#issue-259490424)\n#*.snk\n\n# Since there are multiple workflows, uncomment next line to ignore bower_components\n# (https://github.com/github/gitignore/pull/1529#issuecomment-104372622)\n#bower_components/\n# ASP.NET Core default setup: bower directory is configured as wwwroot/lib/ and bower restore is true\n**/wwwroot/lib/\n\n# RIA/Silverlight projects\nGenerated_Code/\n\n# Backup & report files from converting an old project file\n# to a newer Visual Studio version. Backup files are not needed,\n# because we have git ;-)\n_UpgradeReport_Files/\nBackup*/\nUpgradeLog*.XML\nUpgradeLog*.htm\nServiceFabricBackup/\n*.rptproj.bak\n\n# SQL Server files\n*.mdf\n*.ldf\n*.ndf\n\n# Business Intelligence projects\n*.rdl.data\n*.bim.layout\n*.bim_*.settings\n*.rptproj.rsuser\n\n# Microsoft Fakes\nFakesAssemblies/\n\n# GhostDoc plugin setting file\n*.GhostDoc.xml\n\n# Node.js Tools for Visual Studio\n.ntvs_analysis.dat\nnode_modules/\n\n# Visual Studio 6 build log\n*.plg\n\n# Visual Studio 6 workspace options file\n*.opt\n\n# Visual Studio 6 auto-generated workspace file (contains which files were open etc.)\n*.vbw\n\n# Visual Studio LightSwitch build output\n**/*.HTMLClient/GeneratedArtifacts\n**/*.DesktopClient/GeneratedArtifacts\n**/*.DesktopClient/ModelManifest.xml\n**/*.Server/GeneratedArtifacts\n**/*.Server/ModelManifest.xml\n_Pvt_Extensions\n\n# Paket dependency manager\n.paket/paket.exe\npaket-files/\n\n# FAKE - F# Make\n.fake/\n\n# JetBrains Rider\n.idea/\n*.sln.iml\n\n# CodeRush personal settings\n.cr/personal\n\n# Python Tools for Visual Studio (PTVS)\n__pycache__/\n*.pyc\n\n# Cake - Uncomment if you are using it\n# tools/**\n# !tools/packages.config\n\n# Tabs Studio\n*.tss\n\n# Telerik's JustMock configuration file\n*.jmconfig\n\n# BizTalk build output\n*.btp.cs\n*.btm.cs\n*.odx.cs\n*.xsd.cs\n\n# OpenCover UI analysis results\nOpenCover/\n\n# Azure Stream Analytics local run output\nASALocalRun/\n\n# MSBuild Binary and Structured Log\n*.binlog\n\n# NVidia Nsight GPU debugger configuration file\n*.nvuser\n\n# MFractors (Xamarin productivity tool) working folder\n.mfractor/\n\n# Local History for Visual Studio\n.localhistory/\n\n# BeatPulse healthcheck temp database \nhealthchecksdb\n`;\n\nexport default gitgnoreTemplate;","module.exports = require(\"vscode\");","module.exports = require(\"fs\");","module.exports = require(\"path\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(265);\n"],"names":["context","subscriptions","push","vscode","commands","registerTextEditorCommand","textEditor","edit","position","selection","active","insert","toUpperCase","toLowerCase","registerCommand","uri","gitgnorePath","toString","startsWith","replace","gitgnoreFullPath","join","stat","async","err","stats","writeFileSync","window","showInformationMessage","showErrorMessage","S4","Math","random","substring","module","exports","require","__webpack_module_cache__","__webpack_exports__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","call"],"sourceRoot":""}